{
  "openapi": "3.0.0",
  "info": {
    "title": "Flytix-api",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://flytix-aerotech.up.railway.app/api/v1",
      "description": "public"
    },
    {
      "url": "http://localhost:8000/api/v1",
      "description": "local"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth API Collection"
    },
    {
      "name": "Ticket",
      "description": "This is API for managing CRUD PRODUCTS"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register",
        "tags": ["Auth"],
        "description": "Create new user",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registration success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "User created successfully"
                    },
                    "user": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/Users"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Email already registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "User already exists."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login",
        "tags": ["Auth"],
        "description": "Retrieve access tokens",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "habbin@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "habbin123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Login successful"
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwiaWF0IjoxNjg2NDA3MTI1fQ.AAGnkjiWm0qQYKqFYyTWGPq3MtzBQ2ZNh7idomC-q0w"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "wrong password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "msg": {
                      "type": "string",
                      "example": "Passwords don't match"
                    },
                    "user": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/Users"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/passenger": {
      "post": {
        "summary": "Create Passenger",
        "tags": ["Passenger"],
        "description": "Add new passenger on the database",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Passengers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Berhasil menambahkan data passenger"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Passenger"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid token. Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Hanya bisa diakses oleh admin."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Passengers",
        "tags": ["Passenger"],
        "description": "Retrieve list of passenger",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Passenger"
                    },
                    "count": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/passengers/{id}": {
      "get": {
        "tags": ["Passenger"],
        "summary": "Get An Passenger",
        "description": "Retrieve passenger detail",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Passenger"
                }
              }
            }
          },
          "404": {
            "description": "The passenger id is not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "ID passenger tidak ditemukan."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Passenger"],
        "summary": "Update Passenger",
        "description": "Change passenger information",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Passenger"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Data passenger berhasil diperbarui."
                    },
                    "data": {
                      "$ref": "#/components/schemas/Passenger"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid token. Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Hanya bisa diakses oleh admin."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The airport id is not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "ID passenger tidak ditemukan."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Passenger"],
        "summary": "Delete Passenger",
        "description": "Remove existing passenger by id.",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Data Passenger berhasil dihapus."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid token. Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Hanya bisa diakses oleh admin."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The Passenger id is not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "ID Passenger tidak ditemukan."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Users": {
        "type": "object",
        "properties": {
          "full_name": {
            "type": "string",
            "example": "habbin"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "habbin@gmail.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "habbin123"
          },
          "username": {
            "type": "string",
            "example": "habbin"
          },
          "phone_number": {
            "type": "string",
            "example": "08123456789"
          },
          "photo": {
            "type": "string",
            "format": "binary",
            "example": "url photo"
          }
        }
      },
      "Tickets": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "format": "double",
            "example": "2000000"
          },
          "type_of_class": {
            "type": "string",
            "enum": ["Economy Class", "Business Class", "First Class", "Quiet Class"],
            "example": "Economy Class"
          },
          "airport_id": {
            "type": "integer",
            "example": "3"
          },
          "flight_id": {
            "type": "string",
            "example": "1"
          },
          "passenger_id": {
            "type": "integer",
            "example": "1"
          }
        }
      },
      "Flights": {
        "type": "object",
        "properties": {
          "flight_number": {
            "type": "number",
            "format": "integer",
            "example": "3"
          },
          "departure_date": {
            "type": "string",
            "format": "date-time",
            "example": "2000000"
          },
          "arrival_date": {
            "type": "string",
            "format": "date-time",
            "example": "2000000"
          },
          "departure_location": {
            "type": "string",
            "example": "Jakarta"
          },
          "arrival_location": {
            "type": "string",
            "example": "Surabaya"
          },
          "from_id": {
            "type": "string",
            "format": "char",
            "example": "JKT"
          },
          "to_id": {
            "type": "string",
            "format": "char",
            "example": "SBY"
          },
          "airline": {
            "type": "string",
            "example": "LION AIR"
          },
          "capacity": {
            "type": "number",
            "format": "integer",
            "example": "200"
          },
          "economy_class_price": {
            "type": "number",
            "format": "double",
            "example": "2000000"
          },
          "business_class_price": {
            "type": "number",
            "format": "double",
            "example": "2000000"
          },
          "first_class_price": {
            "type": "number",
            "format": "double",
            "example": "2000000"
          },
          "quiet_class_price": {
            "type": "number",
            "format": "double",
            "example": "2000000"
          }
        }
      },
      "Airports": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Abdulrachman Saleh"
          },
          "location": {
            "type": "string",
            "example": "Malang"
          },
          "code": {
            "type": "string",
            "example": "ABS"
          }
        }
      },
      "Passenger": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "example": "habbin"
          },
          "last_name": {
            "type": "string",
            "example": "Nofaylah"
          },
          "birth_date": {
            "type": "string",
            "format": "YY-MM-DD",
            "example": "2003-05-22"
          },
          "nik_number": {
            "type": "string",
            "example": "8080808080808081"
          },
          " nationality": {
            "type": "string",
            "example": "indonesia"
          },
          "passenger_role": {
            "type": "string",
            "example": "Dewasa"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerToken": {
        "description": "Insert Token, You can get it after login",
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
